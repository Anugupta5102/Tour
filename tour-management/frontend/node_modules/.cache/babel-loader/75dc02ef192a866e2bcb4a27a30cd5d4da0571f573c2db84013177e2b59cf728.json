{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:6000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const login = credentials => api.post('/auth/login', credentials);\nexport const register = userData => api.post('/auth/register', userData);\n\n// Tours API\nexport const getAllTours = () => api.get('/tours');\nexport const getTourById = id => api.get(`/tours/${id}`);\nexport const createTour = tourData => api.post('/tours', tourData);\nexport const updateTour = (id, tourData) => api.put(`/tours/${id}`, tourData);\nexport const deleteTour = id => api.delete(`/tours/${id}`);\n\n// Hotels API\nexport const getAllHotels = params => api.get('/hotels', {\n  params\n});\nexport const getHotelById = id => api.get(`/hotels/${id}`);\nexport const createHotel = hotelData => api.post('/hotels', hotelData);\nexport const updateHotel = (id, hotelData) => api.put(`/hotels/${id}`, hotelData);\nexport const deleteHotel = id => api.delete(`/hotels/${id}`);\nexport const checkHotelAvailability = (id, dates) => api.post(`/hotels/${id}/check-availability`, dates);\n\n// Bookings API\nexport const createBooking = bookingData => api.post('/bookings', bookingData);\nexport const getUserBookings = () => api.get('/bookings/user');\nexport const updateBookingStatus = (id, status) => api.put(`/bookings/${id}`, {\n  status\n});\nexport const cancelBooking = id => api.delete(`/bookings/${id}`);\n\n// Payments API\nexport const createPaymentIntent = amount => api.post('/payments/create-payment-intent', {\n  amount\n});\nexport const confirmPayment = (bookingId, paymentIntentId) => api.post(`/payments/confirm/${bookingId}`, {\n  paymentIntentId\n});\n\n// Reviews API\nexport const addReview = (tourId, reviewData) => api.post(`/tours/${tourId}/reviews`, reviewData);\nexport const getReviews = tourId => api.get(`/tours/${tourId}/reviews`);\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","credentials","post","register","userData","getAllTours","get","getTourById","id","createTour","tourData","updateTour","put","deleteTour","delete","getAllHotels","params","getHotelById","createHotel","hotelData","updateHotel","deleteHotel","checkHotelAvailability","dates","createBooking","bookingData","getUserBookings","updateBookingStatus","status","cancelBooking","createPaymentIntent","amount","confirmPayment","bookingId","paymentIntentId","addReview","tourId","reviewData","getReviews"],"sources":["C:/Users/DELL/Desktop/MernStack-Tour-Management/tour-management/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:6000/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const login = (credentials) => api.post('/auth/login', credentials);\nexport const register = (userData) => api.post('/auth/register', userData);\n\n// Tours API\nexport const getAllTours = () => api.get('/tours');\nexport const getTourById = (id) => api.get(`/tours/${id}`);\nexport const createTour = (tourData) => api.post('/tours', tourData);\nexport const updateTour = (id, tourData) => api.put(`/tours/${id}`, tourData);\nexport const deleteTour = (id) => api.delete(`/tours/${id}`);\n\n// Hotels API\nexport const getAllHotels = (params) => api.get('/hotels', { params });\nexport const getHotelById = (id) => api.get(`/hotels/${id}`);\nexport const createHotel = (hotelData) => api.post('/hotels', hotelData);\nexport const updateHotel = (id, hotelData) => api.put(`/hotels/${id}`, hotelData);\nexport const deleteHotel = (id) => api.delete(`/hotels/${id}`);\nexport const checkHotelAvailability = (id, dates) => api.post(`/hotels/${id}/check-availability`, dates);\n\n// Bookings API\nexport const createBooking = (bookingData) => api.post('/bookings', bookingData);\nexport const getUserBookings = () => api.get('/bookings/user');\nexport const updateBookingStatus = (id, status) => api.put(`/bookings/${id}`, { status });\nexport const cancelBooking = (id) => api.delete(`/bookings/${id}`);\n\n// Payments API\nexport const createPaymentIntent = (amount) => api.post('/payments/create-payment-intent', { amount });\nexport const confirmPayment = (bookingId, paymentIntentId) => \n  api.post(`/payments/confirm/${bookingId}`, { paymentIntentId });\n\n// Reviews API\nexport const addReview = (tourId, reviewData) => api.post(`/tours/${tourId}/reviews`, reviewData);\nexport const getReviews = (tourId) => api.get(`/tours/${tourId}/reviews`);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,KAAK,GAAIC,WAAW,IAAKb,GAAG,CAACc,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;AAC1E,OAAO,MAAME,QAAQ,GAAIC,QAAQ,IAAKhB,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;;AAE1E;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,QAAQ,CAAC;AAClD,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAKpB,GAAG,CAACkB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;AAC1D,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IAAKtB,GAAG,CAACc,IAAI,CAAC,QAAQ,EAAEQ,QAAQ,CAAC;AACpE,OAAO,MAAMC,UAAU,GAAGA,CAACH,EAAE,EAAEE,QAAQ,KAAKtB,GAAG,CAACwB,GAAG,CAAC,UAAUJ,EAAE,EAAE,EAAEE,QAAQ,CAAC;AAC7E,OAAO,MAAMG,UAAU,GAAIL,EAAE,IAAKpB,GAAG,CAAC0B,MAAM,CAAC,UAAUN,EAAE,EAAE,CAAC;;AAE5D;AACA,OAAO,MAAMO,YAAY,GAAIC,MAAM,IAAK5B,GAAG,CAACkB,GAAG,CAAC,SAAS,EAAE;EAAEU;AAAO,CAAC,CAAC;AACtE,OAAO,MAAMC,YAAY,GAAIT,EAAE,IAAKpB,GAAG,CAACkB,GAAG,CAAC,WAAWE,EAAE,EAAE,CAAC;AAC5D,OAAO,MAAMU,WAAW,GAAIC,SAAS,IAAK/B,GAAG,CAACc,IAAI,CAAC,SAAS,EAAEiB,SAAS,CAAC;AACxE,OAAO,MAAMC,WAAW,GAAGA,CAACZ,EAAE,EAAEW,SAAS,KAAK/B,GAAG,CAACwB,GAAG,CAAC,WAAWJ,EAAE,EAAE,EAAEW,SAAS,CAAC;AACjF,OAAO,MAAME,WAAW,GAAIb,EAAE,IAAKpB,GAAG,CAAC0B,MAAM,CAAC,WAAWN,EAAE,EAAE,CAAC;AAC9D,OAAO,MAAMc,sBAAsB,GAAGA,CAACd,EAAE,EAAEe,KAAK,KAAKnC,GAAG,CAACc,IAAI,CAAC,WAAWM,EAAE,qBAAqB,EAAEe,KAAK,CAAC;;AAExG;AACA,OAAO,MAAMC,aAAa,GAAIC,WAAW,IAAKrC,GAAG,CAACc,IAAI,CAAC,WAAW,EAAEuB,WAAW,CAAC;AAChF,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAMtC,GAAG,CAACkB,GAAG,CAAC,gBAAgB,CAAC;AAC9D,OAAO,MAAMqB,mBAAmB,GAAGA,CAACnB,EAAE,EAAEoB,MAAM,KAAKxC,GAAG,CAACwB,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAE;EAAEoB;AAAO,CAAC,CAAC;AACzF,OAAO,MAAMC,aAAa,GAAIrB,EAAE,IAAKpB,GAAG,CAAC0B,MAAM,CAAC,aAAaN,EAAE,EAAE,CAAC;;AAElE;AACA,OAAO,MAAMsB,mBAAmB,GAAIC,MAAM,IAAK3C,GAAG,CAACc,IAAI,CAAC,iCAAiC,EAAE;EAAE6B;AAAO,CAAC,CAAC;AACtG,OAAO,MAAMC,cAAc,GAAGA,CAACC,SAAS,EAAEC,eAAe,KACvD9C,GAAG,CAACc,IAAI,CAAC,qBAAqB+B,SAAS,EAAE,EAAE;EAAEC;AAAgB,CAAC,CAAC;;AAEjE;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACC,MAAM,EAAEC,UAAU,KAAKjD,GAAG,CAACc,IAAI,CAAC,UAAUkC,MAAM,UAAU,EAAEC,UAAU,CAAC;AACjG,OAAO,MAAMC,UAAU,GAAIF,MAAM,IAAKhD,GAAG,CAACkB,GAAG,CAAC,UAAU8B,MAAM,UAAU,CAAC;AAEzE,eAAehD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}